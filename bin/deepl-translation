#!/usr/bin/env raku
use v6.d;

use Lingua::Translation::DeepL;

my %*SUB-MAIN-OPTS =
        :named-anywhere,    # allow named variables at any location
        ;

#| Text translation using the DeepL API.
sub MAIN(Str $text,                                #= Text to be translated.
         Str :f(:$from-lang) is copy = 'Whatever', #= Source language.
         Str :t(:$to-lang) is copy = 'English',    #= Target language.
         Str :a(:$auth-key) is copy = 'Whatever',  #= Authorization key (to use DeepL API.)
         Str :$formality is copy = 'Whatever',     #= Language formality in the translated text; one of ('more', 'less', 'default', or 'Whatever'.)
         UInt :$timeout= 10,                       #= Timeout.
         Str :$format is copy = 'json',            #= Format of the result; one of "json" or "hash".
         ) {

    if $auth-key eq 'Whatever' {
        if %*ENV<DEEPL_AUTH_KEY>:exists {
            $auth-key = %*ENV<DEEPL_AUTH_KEY>;
        } else {
            note 'Cannot find DeepL authorization key. ' ~
                    'Please provide a valid key to the argument auth-key, or set the ENV variable DEEPL_AUTH_KEY.';
            $auth-key = ''
        }
    }

    my $res =
            deepl-translation($text,
                    from-lang => $from-lang eq 'Whatever' ?? Whatever !! $from-lang,
                    :$to-lang,
                    :$auth-key,
                    :$formality,
                    :$timeout,
                    :$format);

    if $format.lc âˆˆ <hash raku> {
        say $res.raku;
    } else {
        say $res;
    }
}